---

- name: Add appdb1 IP address to app servers /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*appdb1$'
    line: "{{ groups.appdbs_p[0] }} appdb1"
#    line: "{{ hostvars['appdb1']['ansible_default_ipv4']['address'] }} appdb1"
    state: present

  tags:
    - apps
    - tomcat

- name: Create flask user
  user:
    name: "{{ flask_user }}"
    state: present

  tags:
    - apps
    - tomcat

- name: Install flask packages including postgres pre-reqs
  package:
    name: "{{ __package }}"
    state: present
  loop:
    - "{{ postgres_rhel7_repo }}"
    - "{{ app_yum_packages }}"
    - "{{ postgres_library }}"
  loop_control:
    loop_var: __package

  tags:
    - apps
    - tomcat

- name: "Install flask repo {{ flask_repo }}"
  git:
    repo: "{{ flask_repo }}"
    dest: "{{ flask_home }}/{{ flask_app_name }}"
    update: yes
    force: yes
#  tags:
#    - git
  tags:
    - apps
    - tomcat

- name: "Change flash repo owner to {{ flask_user }} recursively"
  file:
    dest: "{{ flask_home }}/{{ flask_app_name }}"
    owner: "{{ flask_user }}"

  tags:
    - apps
    - tomcat

- name: virtualenv setup
  block:

    - name: Setup pre-requisite pip3 packages
      pip:
        name: "{{ pip_dependencies }}"
        state: latest
        executable: /usr/bin/pip3

    - name: "Create virtualenv {{ virtualenv_name }} for Flask"
      pip:
        requirements: "{{ flask_home }}/{{ flask_app_name }}/requirements.txt"
        virtualenv: "{{ virtualenv_home }}/{{ flask_app_name }}"
        virtualenv_site_packages: no
        virtualenv_command: /usr/local/bin/virtualenv
  tags:
    - apps
    - tomcat

- name: Initialize flask app database resources
  command: "{{ virtualenv_home }}/{{ flask_app_name }}/bin/python3 {{ flask_home }}/{{ flask_app_name }}/config.py"
  run_once: true

  tags:
    - apps
    - tomcat

- name: "Generate {{ flask_app_name }} startup script"
  template:
    src: launch_resource_hub.j2
    dest: /usr/local/bin/launch_resource_hub
    mode: '0555'

  tags:
    - apps
    - tomcat

- name: template systemd service config
  template:
    src: flask_service.j2
    dest: /etc/systemd/system/{{ flask_app_name }}.service
    mode: '0755'

  tags:
    - apps
    - tomcat

- name: template index.html
  template:
    src: index.html.j2
    dest: /opt/resource_hub/templates/base.html
    mode: '0644'

  tags:
    - apps
    - tomcat

- name: start systemd app service
  systemd:
    name: "{{ flask_app_name }}.service"
    state: restarted
    enabled: yes

  tags:
    - apps
    - tomcat

#- name: generate index.html
#  template:
#    src: index.html.j2
#    dest: /var/www/html/index.html
#    mode: '0755'
#
#  tags:
#    - apps
#    - tomcat
